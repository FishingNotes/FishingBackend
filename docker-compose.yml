
services:
  web:
    volumes:
      - ./tmp/images:/images
    build: .
    image: fishingweb:latest
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - postgres

  db:
    image: postgres
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGADMIN_DEFAULT_EMAIL: "fishingnotesru@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5080:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backup:/backups
    links:
      - db:db
    depends_on:
      - db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_EXTRA_OPTS: -Z9 --schema=public --blobs
      SCHEDULE: "@every 1h00m00s"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 81
    networks:
      - postgres

networks:
  postgres:
    driver: bridge