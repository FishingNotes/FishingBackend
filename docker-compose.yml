
services:
  web:
    volumes:
      - ${HOME_DIR}/images:/images
    build: .
    image: fishingweb:latest
    ports:
      - "${PORT}:8080"
      - "${PORT_SSL}:8443"
    environment:
      - JDBC_URL=${JDBC_URL}
      - JKS_ALIAS=${JKS_ALIAS}
      - JKS_PASS=${JKS_PASS}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - postgres

  db:
    image: postgres
    volumes:
      - ${HOME_DIR}/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${POSTGRES_PORT}:5432"
#    command:
#      -p ${PGPORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432" ]
      interval: 1s
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    volumes:
      - ${HOME_DIR}/pgadmin:/var/lib/pgadmin
#    user: root
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "${PGADMIN_PORT}:80"
#    command:
#      -p ${PGPORT}
    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 0.5G
    depends_on:
      - db
    networks:
      - postgres

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ${HOME_DIR}/backup:/backups
    links:
      - db:db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
#      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_EXTRA_OPTS: -Z9 --schema=public --blobs
      SCHEDULE: "@every 1h00m00s"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 81
    depends_on:
      - db
    networks:
      - postgres

networks:
  postgres:
    driver: bridge